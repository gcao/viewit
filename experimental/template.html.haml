!!!
%html{:lang => "en", "xml:lang" => "en", :xmlns => "http://www.w3.org/1999/xhtml"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
    %meta{:content => "chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %title= title
    %link{:href => "test_files/bundle_common.css", :media => "screen", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "test_files/bundle_gist.css", :media => "screen", :rel => "stylesheet", :type => "text/css"}/
    %script{:charset => "utf-8", :type => "text/javascript"}
      var GitHub = {}
    %script{:src => "test_files/jquery.js", :type => "text/javascript"}
    %script{:src => "test_files/bundle_common.js", :type => "text/javascript"}
    %script{:src => "test_files/bundle_gist.js", :type => "text/javascript"}
    %link{:href => current_gist.json_url, :rel => "alternate", :title => "#{messages.gist_label} #{current_gist._id}", :type => "application/json+oembed"}/
    :javascript
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-3769691-4']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script');
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        ga.setAttribute('async', 'true');
        document.documentElement.firstChild.appendChild(ga);
      })();
    %script{:async => "true", :src => "test_files/ga.js"}
  %body.usingMouse
    #main
      #header
        .site
          .logo
            %a{:href => gist_homepage_url}
              %img{:alt => "gist", :src => "test_files/logo_gist.png"}/
          .userbox
            .avatarname
              %a{:href => logged_in_user.view_url}
                %img{:alt => "", :height => "20", :src => logged_in_user.logo_url, :width => "20"}/
              %a.name{:href => logged_in_user.view_url}= logged_in_user.username
            %ul.usernav
              %li
                %a{:href => logged_in_user.dashboard_url}= messages.dashboard_link_label
              %li
                %a{:href => logged_in_user.inbox_url}= messages.inbox_link_label
                %a.unread_count{:href => logged_in_user.inbox_url}= logged_in_user.message_count
              %li
                %a{:href => logged_in_user.view_url}= messages.settings_link_label
              %li
                %a{:href => logout_url}= messages.logout_link_label
          / /.userbox
          .topsearch
            %form#top_search_form{:action => gist_search_url, :method => "get"}
              %input.search.notnative.placeholder{:name => "q", :placeholder => messages.gist_search_input_floating_text, :results => "5", :type => "search"}/
              %input.button{:type => "submit", :value => "Search"}/
              %input{:name => "page", :type => "hidden", :value => "1"}/
            %ul.nav
              %li
                %a{:href => gist_homepage_url}= messages.new_gist_link_label
              %li
                %a{:href => my_gists_url}= messages.my_gists_link_label
              %li
                %a{:href => starred_gists_url}= messages.starred_gists_link_label
              %li
                %a{:href => all_gists_url}= messages.all_gists_link_label
              %li
                %a{:href => homepage_url}= messages.back_to_github_link_label
          / /.topsearch
      .site
        .secondary
          #owner
            .actor
              .gravatar
                %img{:alt => "", :height => "30", :src => current_gist.owner.logo_url, :width => "30"}/
              .name
                %a{:href => current_gist.owner.view_url}= current_gist.owner.username
                %span= messages.gist_owner_label
          #forks.fork-info
            %h3= messages.forks_label
            %ul.gists.forks
              - current_gist.forks.each do |fork|
                %li= render_with_hash(messages.gist_item,     |
                  :_id => current_gist._id,                   |
                  :user => current_gist.owner.username,       |
                  :user_url => current_gist.owner.view_url,   |
                  :created_at => fork.created_at,             |
                  :created_at_alias => fork.created_at_alias) |
          #revisions
            %h3= messages.revisions_label
            %ul
              - current_gist.revisions.each_with_index do |rev, i|
                %li{:class => (i == 0 ? "current" : "other")}
                  - rev.changes_abbr.input.each_char do |char|
                    - color = char == "+" ? "green" : (char == "-" ? "red" : "gray")
                    %img{:alt => "", :src => "test_files/dot_#{color}.png"}/
                  %a.id{:href => rev.view_url}= rev._id
                  %a.author{:href => rev.owner.view_url}= rev.owner.username
                  %span.date
                    %abbr.relatize.relatized{:title => rev.created_at}= rev.created_at_alias
        / /.secondary
        .main
          #repos
            .repo.public
              .title
                .path
                  #{messages.gist_label} #{current_gist._id}
                  %a{:href => current_gist.download_url}
                    %img.button{:alt => "Download_button", :border => "0", :src => "test_files/download_button.png"}/
                  %a{:href => current_gist.fork_url}
                    %img.button{:alt => "fork", :src => "test_files/fork_button.png"}/
                  %a{:href => current_gist.star_url}
                    %img.button{:alt => "star", :src => "test_files/star_button.png"}/
                - if current_gist.is_public
                  .security.public_security{:style => ""}
                    %a{:href => "#public_repo", :rel => "facebox"}
                      %img{:alt => "public", :src => "test_files/public.png"}/
                #private_repo.hidden
                  = messages.private_gist_desc
                #public_repo.hidden
                  = messages.public_gist_desc
              .meta
                %table
                  %tbody
                    %tr
                      %td.label Description:
                      %td
                        .description
                          %span#gist-text-description.edit= current_gist.description
                    %tr
                      %td.label= messages.public_clone_label
                      %td
                        %a.git_url_facebox{:href => current_gist.public_clone_url, :rel => "#git-clone"}= current_gist.public_clone_url
                        #git-clone{:style => "display: none; min-width: 500px;"}
                          = messages.public_clone_note
                          %br/
                          %code git clone #{current_gist.public_clone_url} gist-#{current_gist._id}
                    %tr
                      %td.label= messages.embed_label
                      %td
                        %a.gist-embed-link{:href => "#"}= messages.show_embed_label
                        %input.gist-embed-box{:size => "25", :style => "display: none;", :type => "text", :value => "&lt;script src=&quot;http://gist.github.com/#{current_gist._id}.js&quot;&gt; &lt;/script&gt;"}/
          #files
            - current_gist.files.each do |file|
              .file{:id => file._id}
                .meta.clearfix
                  .info
                    %span.code
                      = file.title
                      %a{:href => file.url}= messages.file_link_label
                  .actions
                    #gist-embed{:style => "display: inline;"}
                      %a.gist-embed-link{:href => "#"}= messages.file_embed_label
                      %input.gist-embed-box{:size => "25", :style => "display: none;", :type => "text", :value => file.embed_code}/
                    %a{:href => file.raw_url}= messages.file_raw_link_label
                #readme.blob
                  .wikistyle
                    %h1 Instrument Anything in Rails 3
                    %p
                      With Rails 3.0 released a few weeks ago I've migrated a few apps and
                      I'm constantly finding useful new improvements.  One such improvement is
                      the ability to log anything in the same way that Rails internally logs
                      ActiveRecord and ActionView.  By default Rails 3 logs look slightly
                      spiffier than those produced by Rails 2.3: (notice the second line has
                      been cleaned up)
                    %pre
                      %code
                        :preserve
                          Started GET "/" for 127.0.0.1 at Mon Sep 06 01:07:11 -0400 2010
                            Processing by HomeController#index as HTML
                            User Load (0.2ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 3) LIMIT 1
                            CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 3) LIMIT 1
                          Rendered layouts/_nav.html.erb (363.4ms)
                          Rendered layouts/_nav.html.erb (1.1ms)
                          Rendered layouts/_footer.html.erb (2.6ms)
                          Rendered home/index.html.erb within layouts/application (503.6ms)
                          Completed 200 OK in 510ms (Views: 507.9ms | ActiveRecord: 406.3ms)
                    %p
                      This output format is very informative, but what if we're using
                      MongoDB or CouchDB instead of ActiveRecord? What if our page has a Solr
                      query that takes up a signification portion of the response time, and we
                      want to break it out of the total?
                    %p
                      The app I'm working on at Market.io uses Solr extensively via the
                      %a{:href => "http://delsolr.rubyforge.org/"} delsolr
                      gem.  Since delsolr is not Rails-specific, I have created a wrapper
                      around the service calls to add hooks.  If I wanted to log Solr queries I
                      could just add
                      %code Rails.logger.info "Solr query: \#{query}"
                      but now Rails provides a better way.
                    %p
                      In Rails 3, logging has been abstracted into
                      = succeed "," do
                        %a{:href => "http://rdoc.info/github/rails/rails/v3.0.0/ActiveSupport/Notifications"} ActiveSupport::Notifications
                      which publishes logging events, and
                      = succeed "," do
                        %a{:href => "http://rdoc.info/github/rails/rails/v3.0.0/ActiveSupport/LogSubscriber"} ActiveSupport::LogSubscriber
                      which consumes the events and logs the output.  This abstraction lets
                      any number of entities publish notifications. (I'm calling those
                      entities "services" for the purpose of this article, but any call can be
                      instrumented.)
                    %p
                      ActiveRecord provides an excellent example of how to subscribe to
                      notifications.  I've adapted it to delsolr with minimal changes.  First
                      we tell Rails what to instrument:
            / cache end
          #comments
            %h2= render_with_hash(messages.comments_header, :comment_count => current_gist.comments.size)
            .new-comments
              - current_gist.comments.each do |comment|
                .comment.gist-comment{:id => "gistcomment-#{comment._id}"}
                  .cmeta
                    %p.author
                      %span.gravatar
                        %img{:alt => "", :height => "20", :src => comment.author.gravatar, :width => "20"}/
                      %strong.author
                        %a{:href => comment.author.gists_url}= comment.author.username
                      %em
                        %a{:href => "#gistcomment-#{comment._id}"}= messages.commented_link_label
                    %p.info
                      %em.date
                        %abbr.relatize.relatized{:title => comment.created_at}= comment.created_at_alias
                      %span.icon
                  .body
                    .formatted-content
                      .content-body.wikistyle
                        = comment.body
            %form{:action => "/#{current_gist._id}/comment", :method => "post"}
              %div{:style => "margin: 0pt; padding: 0pt;"}
                %input{:name => "authenticity_token", :type => "hidden", :value => authenticity_token}/
              %p.comment-form-error{:style => "display: none;"}= messages.blank_comment_error
              .comment-form.previewable-comment-form
                = messages.comment_note
                %ul.tabs.inline-tabs
                  %li
                    %a.selected{:action => "write", :href => "#write_bucket_554"}= messages.write_comment_label
                  %li
                    %a{:action => "preview", :href => "#preview_bucket_554"}= messages.preview_comment_label
                #write_bucket_554.tab-content{:style => "display: block;"}
                  %textarea#comment_body_554{:name => "comment[body]", :tabindex => "1"}
                #preview_bucket_554.new-comments.tab-content{:style => "display: none;"}
                  #openstruct-69981417896720.comment.normal-comment
                    .cmeta
                      %p.author
                        %span.gravatar
                          %img{:alt => "", :height => "20", :src => logged_in_user.logo_url, :width => "20"}/
                        %strong.author
                          %a{:href => logged_in_user.gists_url}= logged_in_user.username
                        %em
                          %a{:href => "#openstruct-69981417896720"}
                            = messages.commented_link_label
                      %p.info
                        %em.date
                          %abbr.relatize.relatized{:title => Time.now}= messages.now_label
                        %span.icon
                    .body
                      .formatted-content
                        .content-body.wikistyle
                          = messages.nothing_to_preview
              .form-actions
                %button.classy{:type => "submit"}
                  %span= messages.comment_submit_label
        / /.main
      / site
      .push
    #footer
      .site
        .info
          .logo
            %a{:href => "http://github.com/"}
              %img{:alt => "GitHub", :src => "test_files/logo_white.png"}/
          .more
            .links
              %a{:href => "http://github.com/blog"}
                %strong Blog
              |
              %a{:href => "http://support.github.com/?sso=_-D9qfwBNALVWtVhGCwVCzX3G3akBoO36XQ8M-kMER3mItaw2V5DpBTBMMTZiae4Dy18bMl-4CJK9MAEfFy_AVxwQJCk9XLtmSniAFz-VwjxAgL_Y1a_AZCRN_NnN6BhwhzBiVv89zTITQLYmRgcKqL4266Twjvpq5OnO8TG7gQyEaDwrnI5NdirdlFH1PuBGunRV50LqokexyIfWDGT-Le8TR22PIsWgDPi9S-Hwhg"} Support
              |
              %a{:href => "http://github.com/contact"} Contact
              |
              %a{:href => "http://github.com/site/privacy"} Privacy
              |
              %a{:href => "http://github.com/site/terms"} Terms of Service
            .company
              ©
              2010
              GitHub Inc.
              All rights reserved.
        .sponsor
          %div
            Powered by the
            %a{:href => "http://www.rackspace.com/"}
              Dedicated
              Servers
            and
            %br/
            %a{:href => "http://www.rackspacecloud.com/"}
              Cloud
              Computing
            of Rackspace Hosting
            %span ®
          %a{:href => "http://www.rackspace.com/"}
            %img{:alt => "Dedicated Server", :src => "test_files/rackspace_logo.png"}/
    :javascript
      window._auth_token = "#{authenticity_token}";
    #facebox{:style => "display: none;"}
      .popup
        .content         
        %a.close{:href => "#"}
          %img.close_image{:src => "test_files/closelabel.png", :title => "close"}/
