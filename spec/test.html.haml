!!!
%html{:lang => "en", "xml:lang" => "en", :xmlns => "http://www.w3.org/1999/xhtml"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
    %meta{:content => "chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %title gist: 566725 - How to use Rails 3.0's new notification system to inject custom log events- GitHub
    %link{:href => "test_files/bundle_common.css", :media => "screen", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "test_files/bundle_gist.css", :media => "screen", :rel => "stylesheet", :type => "text/css"}/
    %script{:charset => "utf-8", :type => "text/javascript"}
      var GitHub = {}
    %script{:src => "test_files/jquery-1.js", :type => "text/javascript"}
    %script{:src => "test_files/bundle_common.js", :type => "text/javascript"}
    %script{:src => "test_files/bundle_gist.js", :type => "text/javascript"}
    %link{:href => "http://github.com/api/oembed?format=json&amp;url=http%3A%2F%2Fgist.github.com%2F566725", :rel => "alternate", :title => "gist: 566725", :type => "application/json+oembed"}/
    :javascript
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-3769691-4']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script');
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        ga.setAttribute('async', 'true');
        document.documentElement.firstChild.appendChild(ga);
      })();
    %script{:async => "true", :src => "test_files/ga.js"}
  %body.usingMouse
    #main
      #header
        .site
          .logo
            %a{:href => "http://gist.github.com/"}
              %img{:alt => "gist", :src => "test_files/logo_gist.png"}/
          .userbox
            .avatarname
              %a{:href => "http://github.com/gcao"}
                %img{:alt => "", :height => "20", :src => "test_files/6f67bf7db5209823d24a3720746047f6.jpg", :width => "20"}/
              %a.name{:href => "http://github.com/gcao"} gcao
            %ul.usernav
              %li
                %a{:href => "https://github.com/"} Dashboard
              %li
                %a{:href => "https://github.com/inbox"} Inbox
                %a.unread_count{:href => "https://github.com/inbox"} 0
              %li
                %a{:href => "https://github.com/account"} Account Settings
              %li
                %a{:href => "http://gist.github.com/logout"} Log Out
          / /.userbox
          .topsearch
            %form#top_search_form{:action => "/gists/search", :method => "get"}
              %input.search.notnative.placeholder{:name => "q", :placeholder => "Search Gists\342\200\246", :results => "5", :type => "search"}/
              %input.button{:type => "submit", :value => "Search"}/
              %input{:name => "page", :type => "hidden", :value => "1"}/
            %ul.nav
              %li
                %a{:href => "http://gist.github.com/"} New Gist
              %li
                %a{:href => "http://gist.github.com/mine"} My Gists
              %li
                %a{:href => "http://gist.github.com/starred"} Starred Gists
              %li
                %a{:href => "http://gist.github.com/gists"} All Gists
              %li
                %a{:href => "http://github.com/"} Back to GitHub
          / /.topsearch
      .site
        .secondary
          #owner
            .actor
              .gravatar
                %img{:alt => "", :height => "30", :src => "test_files/93bd250c06436d254229792b44b2d677.jpg", :width => "30"}/
              .name
                %a{:href => "http://gist.github.com/mnutt"} mnutt
                %span (owner)
          #forks.fork-info
            %h3 Forks
            %ul.gists.forks
              %li
                %a{:href => "http://gist.github.com/613672"} gist: 613672
                by
                %a{:href => "http://gist.github.com/rbazinet"} rbazinet
                %span.description
                %small
                  created
                  %span.date
                    %abbr.relatize.relatized{:title => "2010-10-06 09:55:49"} October 06, 2010
              %li
                %a{:href => "http://gist.github.com/613683"} gist: 613683
                by
                %a{:href => "http://gist.github.com/aitor"} aitor
                %span.description
                %small
                  created
                  %span.date
                    %abbr.relatize.relatized{:title => "2010-10-06 09:59:09"} October 06, 2010
              %li
                %a{:href => "http://gist.github.com/618063"} gist: 618063
                by
                %a{:href => "http://gist.github.com/JonGretar"} JonGretar
                %span.description
                %small
                  created
                  %span.date
                    %abbr.relatize.relatized{:title => "2010-10-09 02:40:39"} 4 days ago
              %li
                %a{:href => "http://gist.github.com/618310"} gist: 618310
                by
                %a{:href => "http://gist.github.com/stonegao"} stonegao
                %span.description
                %small
                  created
                  %span.date
                    %abbr.relatize.relatized{:title => "2010-10-09 08:47:10"} 4 days ago
          #revisions
            %h3 Revisions
            %ul
              %li.current
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/636766f1a8510723ddaa5eef1c78cecd2054075a"} 636766
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-10-06 10:13:54"} October 06, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/964f16e11f79c8e7cacfc02e185f87be15dc7f5a"} 964f16
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-09 13:56:36"} September 09, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/b19b3fde342d86866c943ce24dfa70d1a2ad23e8"} b19b3f
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-09 13:53:34"} September 09, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/c5c4f7ee440dc5fc4798e6f366e2b172d004447e"} c5c4f7
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-09 13:41:36"} September 09, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/17801623d78e38419366aa4814f4890e56105b5f"} 178016
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-09 13:41:01"} September 09, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/1b121fb75e41ca9e64f1068bf8a3ea7d3555c2dc"} 1b121f
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-09 13:20:13"} September 09, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/e5a5f640623f5b7916ff4c445af3d72fe379778f"} e5a5f6
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-09 13:19:06"} September 09, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/7e1557c97d02bb026c274ed865b2b3b110f788cd"} 7e1557
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-06 12:18:58"} September 06, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/25978243fbcda7a44ee29a09b5e5b265c28f945b"} 259782
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-06 12:16:28"} September 06, 2010
              %li.other
                %img{:alt => "", :src => "test_files/dot_green.png"}/
                %img{:alt => "", :src => "test_files/dot_red.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %img{:alt => "", :src => "test_files/dot_gray.png"}/
                %a.id{:href => "http://gist.github.com/566725/fc1524333a44f8f691b7bfc050fe009a80659bd3"} fc1524
                %a.author{:href => "http://gist.github.com/mnutt"} mnutt
                %span.date
                  %abbr.relatize.relatized{:title => "2010-09-06 12:06:17"} September 06, 2010
        / /.secondary
        .main
          #repos
            .repo.public
              .title
                .path
                  gist: 566725
                  %a{:href => "http://gist.github.com/gists/566725/download"}
                    %img.button{:alt => "Download_button", :border => "0", :src => "test_files/download_button.png"}/
                  %a{:href => "http://gist.github.com/fork/566725"}
                    %img.button{:alt => "fork", :src => "test_files/fork_button.png"}/
                  %a{:href => "http://gist.github.com/star/566725"}
                    %img.button{:alt => "star", :src => "test_files/star_button.png"}/
                .security.public_security{:style => ""}
                  %a{:href => "#public_repo", :rel => "facebox"}
                    %img{:alt => "public", :src => "test_files/public.png"}/
                #private_repo.hidden
                  %h2 Private Gist
                  %p
                    All pages are served over SSL and all pushing and pulling is done over SSH.
                    No one may fork, clone, or view it unless they are given this private URL.
                  %p
                    Every gist with this icon (
                    %img{:alt => "private", :src => "test_files/private.png"}>/
                    ) is private.
                .security.public_security{:style => "display: none;"}
                  %a{:href => "#public_repo", :rel => "facebox"}
                    %img{:alt => "public", :src => "test_files/public.png"}/
                #public_repo.hidden
                  %h2 Public Gist
                  %p Anyone may fork, clone, or view it.
                  %p
                    Every repository with this icon (
                    %img{:alt => "public", :src => "test_files/public.png"}>/
                    ) is public.
              .meta
                %table
                  %tbody
                    %tr
                      %td.label Description:
                      %td
                        .description
                          %span#gist-text-description.edit How to use Rails 3.0's new notification system to inject custom log events
                    %tr
                      %td.label Public Clone URL:
                      %td
                        %a.git_url_facebox{:href => "git://gist.github.com/566725.git", :rel => "#git-clone"} git://gist.github.com/566725.git
                        #git-clone{:style => "display: none; min-width: 500px;"}
                          Give this clone URL to anyone.
                          %br/
                          %code git clone git://gist.github.com/566725.git gist-566725
                    %tr
                      %td.label Embed All Files:
                      %td
                        %a.gist-embed-link{:href => "#"} show embed
                        %input.gist-embed-box{:size => "25", :style => "display: none;", :type => "text", :value => "&lt;script src=&quot;http://gist.github.com/566725.js&quot;&gt; &lt;/script&gt;"}/
          #files
            .file{:id => "file_instrument anything in rails 3.md"}
              .meta.clearfix
                .info
                  %span.code
                    Instrument Anything in Rails 3.md
                    %a{:href => "#file_instrument%20anything%20in%20rails%203.md"} #
                .actions
                  #gist-embed{:style => "display: inline;"}
                    %a.gist-embed-link{:href => "#"} embed
                    %input.gist-embed-box{:size => "25", :style => "display: none;", :type => "text", :value => "&lt;script src=&quot;http://gist.github.com/566725.js?file=Instrument%20Anything%20in%20Rails%203.md&quot;&gt;&lt;/script&gt;"}/
                  %a{:href => "http://gist.github.com/raw/566725/7d55736227e112d2811ccbc58af66e5acbf95e06/Instrument%20Anything%20in%20Rails%203.md"} raw
              #readme.blob
                .wikistyle
                  %h1 Instrument Anything in Rails 3
                  %p
                    With Rails 3.0 released a few weeks ago I've migrated a few apps and
                    I'm constantly finding useful new improvements.  One such improvement is
                    the ability to log anything in the same way that Rails internally logs
                    ActiveRecord and ActionView.  By default Rails 3 logs look slightly
                    spiffier than those produced by Rails 2.3: (notice the second line has
                    been cleaned up)
                  %pre
                    %code
                      :preserve
                        Started GET "/" for 127.0.0.1 at Mon Sep 06 01:07:11 -0400 2010
                          Processing by HomeController#index as HTML
                          User Load (0.2ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 3) LIMIT 1
                          CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 3) LIMIT 1
                        Rendered layouts/_nav.html.erb (363.4ms)
                        Rendered layouts/_nav.html.erb (1.1ms)
                        Rendered layouts/_footer.html.erb (2.6ms)
                        Rendered home/index.html.erb within layouts/application (503.6ms)
                        Completed 200 OK in 510ms (Views: 507.9ms | ActiveRecord: 406.3ms)
                  %p
                    This output format is very informative, but what if we're using
                    MongoDB or CouchDB instead of ActiveRecord? What if our page has a Solr
                    query that takes up a signification portion of the response time, and we
                    want to break it out of the total?
                  %p
                    The app I'm working on at Market.io uses Solr extensively via the
                    %a{:href => "http://delsolr.rubyforge.org/"} delsolr
                    gem.  Since delsolr is not Rails-specific, I have created a wrapper
                    around the service calls to add hooks.  If I wanted to log Solr queries I
                    could just add
                    %code Rails.logger.info "Solr query: \#{query}"
                    but now Rails provides a better way.
                  %p
                    In Rails 3, logging has been abstracted into
                    = succeed "," do
                      %a{:href => "http://rdoc.info/github/rails/rails/v3.0.0/ActiveSupport/Notifications"} ActiveSupport::Notifications
                    which publishes logging events, and
                    = succeed "," do
                      %a{:href => "http://rdoc.info/github/rails/rails/v3.0.0/ActiveSupport/LogSubscriber"} ActiveSupport::LogSubscriber
                    which consumes the events and logs the output.  This abstraction lets
                    any number of entities publish notifications. (I'm calling those
                    entities "services" for the purpose of this article, but any call can be
                    instrumented.)
                  %p
                    ActiveRecord provides an excellent example of how to subscribe to
                    notifications.  I've adapted it to delsolr with minimal changes.  First
                    we tell Rails what to instrument:
                  %pre
                    %code
                      :preserve
                        class SolrDocument
                          def self.query(query_type, options={})
                            ActiveSupport::Notifications.instrument("query.delsolr",
                                                                    :query =&gt; options) do
                              ProductDocument.delsolr_client.query(query_type, options)
                            end
                          end
                        end
                  %p
                    I've wrapped my client call in an ActiveSupport::Notifications block with the first argument in the format
                    = succeed "." do
                      %code {action}.{service}
                    The second argument is the "payload", a hash that gets passed to the
                    log subscriber.  In order to catch the notification, we need to write a
                    subscriber:
                  %pre
                    %code
                      :preserve
                        module SolrInstrumentation
                          class LogSubscriber &lt; ActiveSupport::LogSubscriber
                            def query(event)
                              return unless logger.debug?
                        
                              name = '%s (%.1fms)' % ["SOLR Query", event.duration]
                        
                              # produces: 'query: "foo" OR "bar", rows: 3, ...'
                              query = event.payload[:query].map{ |k, v| "#{k}: #{color(v, BOLD, true)}" }.join(', ')
                        
                              debug "  #{color(name, YELLOW, true)}  [ #{query} ]"
                            end
                          end
                        end
                  %p
                    The subscriber will receive an event with a method
                    %code #payload
                    that returns the hash we passed in earlier with the
                    %code :duration
                    key added.  We simply construct a log line and then use
                    %code #debug
                    to output it to our logfile.  ActiveSupport::LogSubscriber comes with a
                    %code #color
                    method that makes highlighting output very easy.
                  %p
                    Next, we need to register our subscriber to receive events.  We attach our LogSubscriber to all events in the
                    %code delsolr
                    namespace:
                  %pre
                    %code
                      :preserve
                        SolrInstrumentation::LogSubscriber.attach_to :delsolr
                  %p
                    The next step would be to instrument our other Solr calls such as
                    %code delete
                    and
                    %code commit
                    by wrapping the Solr calls with "delete.delsolr" and "commit.delsolr" and adding the appropriate methods.
                  %p Now we should have something like this in our Rails log:
                  %pre
                    %code
                      :preserve
                        Started GET "/" for 127.0.0.1 at Mon Sep 06 01:07:11 -0400 2010
                          Processing by HomeController#index as HTML
                          User Load (0.2ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 3) LIMIT 1
                          CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 3) LIMIT 1
                          SOLR Query (52.2ms)  [ rows: 25, query: "rails 3" OR "rails 2.3", start: 0, fields: * score, sort: created_at desc ]
                        Rendered layouts/_nav.html.erb (363.4ms)
                        Rendered layouts/_nav.html.erb (1.1ms)
                        Rendered layouts/_footer.html.erb (2.6ms)
                        Rendered home/index.html.erb within layouts/application (503.6ms)
                        Completed 200 OK in 562ms (Views: 507.9ms | ActiveRecord: 406.3ms)
                  %p
                    Now it's easy to spot and debug the Solr queries, but it would be
                    nice to see the breakout as well.  For that we need to extend our
                    controllers.
                  %pre
                    %code
                      :preserve
                        module SolrInstrumentation
                          module ControllerRuntime
                            extend ActiveSupport::Concern
                        
                            protected
                        
                            def append_info_to_payload(payload)
                              super
                              payload[:solr_runtime] = SolrInstrumentation::LogSubscriber.runtime
                            end
                        
                            module ClassMethods
                              def log_process_action(payload)
                                messages, solr_runtime = super, payload[:solr_runtime]
                                messages &lt;&lt; ("Solr: %.1fms" % solr_runtime.to_f) if solr_runtime
                                messages
                              end
                            end
                          end
                        end
                        
                        ActiveSupport.on_load(:action_controller) do
                          include SolrInstrumentation::ControllerRuntime
                        end
                  %p
                    Notice that we no longer have to jump through the
                    %code self.included
                    hoops anymore; in Rails 3 we can extend ActiveSupport::Concern to
                    easily add features to ActionController.  ActionController has
                    instrumented the entire request in the same way that we instrumented our
                    Solr call, so we just need to call our controller's
                    %code #append_info_to_payload
                    hook to inject our runtime info into the request notification event.  Lastly, we use the
                    %code #log_process_action
                    hook to catch the payload we just modified and generate a message, which should appear in the logs:
                  %pre
                    %code
                      :preserve
                        Completed 200 OK in 562ms (Views: 507.9ms | ActiveRecord: 406.3ms | Solr: 52.2ms)
                  %p
                    Solr normally shouldn't be called in the views, but if your service
                    is used frequently in views and you don't want it to count towards the
                    view's rendering time you can add a
                    %code #cleanup_view_runtime
                    method to the ControllerRuntime module to return the real view rendering
                    time.  It involves a bit more work in calculating the service's
                    runtime; check out the
                    %a{:href => "http://github.com/rails/rails/blob/master/activerecord/lib/active_record/log_subscriber.rb"} source of ActiveRecord::LogSubscriber
                    for an example.
                  %p
                    Rails 3's notifications open up a lot of possibilities for both
                    publishing and subscribing to events. Already Ilya Grigorik has taken
                    advantage of this in his
                    %a{:href => "http://www.igvita.com/2010/07/19/speed-tracer-server-side-tracing-with-rack/"} Speed Tracer Rack middleware
                    by subscribing to timing events and outputting them to Google Chrome's
                    %a{:href => "http://code.google.com/webtoolkit/speedtracer/"} Speed Tracer
                    browser extension.  I imagine notifications will simplify NewRelic's monitoring gem as well.
                  %p
                    Thanks to Bryan Helmkamp (
                    %a{:href => "http://twitter.com/brynary"}> @brynary
                    ) for technical proofreading.
            / cache end
          #comments
            %h2 2 Comments
            .new-comments
              #gistcomment-11340.comment.gist-comment
                .cmeta
                  %p.author
                    %span.gravatar
                      %img{:alt => "", :height => "20", :src => "test_files/b27766abb4ad9958522a340db11b5ffa.jpg", :width => "20"}/
                    %strong.author
                      %a{:href => "http://gist.github.com/unimatrixZxero"} unimatrixZxero
                    %em
                      %a{:href => "#gistcomment-11340"}
                        commented
                  %p.info
                    %em.date
                      %abbr.relatize.relatized{:title => "2010-10-08 04:32:25"} 5 days ago
                    %span.icon
                .body
                  .formatted-content
                    .content-body.wikistyle
                      %p Thanx for sharing.
              #gistcomment-11700.comment.gist-comment
                .cmeta
                  %p.author
                    %span.gravatar
                      %img{:alt => "", :height => "20", :src => "test_files/0e48c6edbc780e069f225a295f9ca65d.png", :width => "20"}/
                    %strong.author
                      %a{:href => "http://gist.github.com/jistr"} jistr
                    %em
                      %a{:href => "#gistcomment-11700"}
                        commented
                  %p.info
                    %em.date
                      %abbr.relatize.relatized{:title => "2010-10-13 01:31:15"} about 18 hours ago
                    %span.icon
                .body
                  .formatted-content
                    .content-body.wikistyle
                      %p Thanks :)
            %form{:action => "/566725/comment", :method => "post"}
              %div{:style => "margin: 0pt; padding: 0pt;"}
                %input{:name => "authenticity_token", :type => "hidden", :value => "a5bcb6359cb829762edbd920e08531c66d7c89cf"}/
              %p.comment-form-error{:style => "display: none;"} You must write something to leave a comment
              .comment-form.previewable-comment-form
                %p.help
                  Comments are parsed with
                  %a{:href => "http://github.github.com/github-flavored-markdown/", :target => "_blank"} GitHub Flavored Markdown
                %ul.tabs.inline-tabs
                  %li
                    %a.selected{:action => "write", :href => "#write_bucket_554"} Write
                  %li
                    %a{:action => "preview", :href => "#preview_bucket_554"} Preview
                #write_bucket_554.tab-content{:style => "display: block;"}
                  %textarea#comment_body_554{:name => "comment[body]", :tabindex => "1"}
                #preview_bucket_554.new-comments.tab-content{:style => "display: none;"}
                  #openstruct-69981417896720.comment.normal-comment
                    .cmeta
                      %p.author
                        %span.gravatar
                          %img{:alt => "", :height => "20", :src => "test_files/6f67bf7db5209823d24a3720746047f6_002.jpg", :width => "20"}/
                        %strong.author
                          %a{:href => "http://gist.github.com/gcao"} gcao
                        %em
                          %a{:href => "#openstruct-69981417896720"}
                            commented
                      %p.info
                        %em.date
                          %abbr.relatize.relatized{:title => "2010-10-13 19:38:34"} just now
                        %span.icon
                    .body
                      .formatted-content
                        .content-body.wikistyle
                          %p Nothing to preview
              .form-actions
                %button.classy{:type => "submit"}
                  %span Add Gist Comment
        / /.main
      / site
      .push
    #footer
      .site
        .info
          .logo
            %a{:href => "http://github.com/"}
              %img{:alt => "GitHub", :src => "test_files/logo_white.png"}/
          .more
            .links
              %a{:href => "http://github.com/blog"}
                %strong Blog
              |
              %a{:href => "http://support.github.com/?sso=_-D9qfwBNALVWtVhGCwVCzX3G3akBoO36XQ8M-kMER3mItaw2V5DpBTBMMTZiae4Dy18bMl-4CJK9MAEfFy_AVxwQJCk9XLtmSniAFz-VwjxAgL_Y1a_AZCRN_NnN6BhwhzBiVv89zTITQLYmRgcKqL4266Twjvpq5OnO8TG7gQyEaDwrnI5NdirdlFH1PuBGunRV50LqokexyIfWDGT-Le8TR22PIsWgDPi9S-Hwhg"} Support
              |
              %a{:href => "http://github.com/contact"} Contact
              |
              %a{:href => "http://github.com/site/privacy"} Privacy
              |
              %a{:href => "http://github.com/site/terms"} Terms of Service
            .company
              ©
              2010
              GitHub Inc.
              All rights reserved.
        .sponsor
          %div
            Powered by the
            %a{:href => "http://www.rackspace.com/"}
              Dedicated
              Servers
            and
            %br/
            %a{:href => "http://www.rackspacecloud.com/"}
              Cloud
              Computing
            of Rackspace Hosting
            %span ®
          %a{:href => "http://www.rackspace.com/"}
            %img{:alt => "Dedicated Server", :src => "test_files/rackspace_logo.png"}/
    :javascript
      window._auth_token = "a5bcb6359cb829762edbd920e08531c66d7c89cf"    #facebox{:style => "display: none;"}
      .popup
        .content         %a.close{:href => "#"}
          %img.close_image{:src => "test_files/closelabel.png", :title => "close"}/
